import random

objetos_crime = [
    "arma",
    "luvas",
    "faca",
    "corda",
    "máscara",
    "cápsulas",
    "fósforos",
    "gasolina",
    "cinzas",
    "mochila",
    "fita adesiva",
    "espelho partido",
    "cacos de vidro",
    "poeira",
    "câmera",
    "computador",
    "cartão de crédito",
    "dispositivo de gravação",
    "chave de fendas",
    "lençol manchado",
    "frasco de comprimidos",
    "lenço",
    "notas escritas",
    "caixa de ferramentas",
    "batom",
    "cabelo",
    "seringa",
    "cápsulas vazias",
    "fio elétrico",
    "vaso partido",
    "lanterna",
    "cabide",
    "papel alumínio",
    "luvas de látex",
    "pneu furado",
    "fita isolante",
    "algemas",
    "chave das algemas",
    "óculos de sol",
    "cigarro",
    "cinzeiro",
    "agenda telefónica",
    "chaves do carro",
    "passaporte",
    "adesivo",
    "cinturão",
    "cartas",
    "fio dental",
    "pedaço de tecido",
    "peruca",
    "moeda",
    "facas de cozinha",
    "furadeira",
    "ferramentas",
    "saco de plástico",
    "fita métrica",
    "molho de chaves",
    "cola",
    "cotonete",
    "comprimidos",
    "fichas de casino",
    "lâmpada queimada",
    "sacos de lixo",
    "prateleira partida",
    "almofada rasgada",
    "embalagem vazia",
    "microfone",
    "taco de basebol",
    "protetor bucal",
    "pen USB",
    "película de plástico",
    "máquina fotográfica",
    "bloco de notas",
    "chave de fendas",
    "sinal de trânsito",
    "pilha",
    "preservativo usado",
    "capacete de bicicleta",
    "pólvora",
    "bateria",
    "esfregão",
    "toalha suja",
    "frasco de perfume",
    "carimbo",
    "bloco de notas",
    "retrato partido",
    "computador portátil",
    "escova de cabelo",
    "batom",
    "molde de gesso",
    "placa de identificação",
    "pistola de cola quente",
    "agenda",
    "bilhete de lotaria",
    "bóia salva-vidas",
    "caixa registadora",
    "folhas de dinheiro",
    "mala",
    "ratoeira",
    "cápsula de veneno",
    "fio dental usado",
    "carta de amor",
    "borracha",
    "kit de primeiros socorros",
    "arame farpado",
    "escultura partida",
    "CD riscado",
    "pastilha elástica mastigada",
    "pedaço de madeira",
    "esfregona",
    "toalha suja",
    "frasco de perfume",
    "carimbo",
    "bloco de notas",
    "retrato partido",
    "computador portátil",
    "escova de cabelo",
    "batom",
    "molde de gesso",
    "filme de câmera",
    "placa de identificação",
    "pistola de cola quente",
    "agenda",
    "cinta de elevação",
    "revistas pornográficas",
    "bilhete de lotaria",
    "bóia salva-vidas",
    "caixa registadora",
    "folhas de dinheiro",
    "mala",
    "ratoeira",
    "rato morto",
    "cápsula de veneno",
    "fio dental usado",
    "carta de amor",
    "leite derramado",
    "borracha",
    "kit de primeiros socorros",
    "arame farpado",
    "escultura partida",
    "cordas de violino",
    "CD riscado",
    "pastilha elástica mastigada",
    "pedaço de madeira"
]


def objetos(count_objetos, count_armazens, count_casos):
    output_buffer_fotos = ""
    output_buffer_objetos = "\n-- OBJETOS\nINSERT INTO Objeto (Id, DataRecolha, Descrição, Armazém, Caso) \nVALUES\n"
    output_buffer_fotos += "\n-- OBJETO_FOTOS\nINSERT INTO ObjetoFotos (Id, Foto, Objeto) \nVALUES\n"
    output_buffer = ""
    for i in range(1, count_objetos):
        objeto = random.choice(objetos_crime).capitalize()
        objeto_foto = objeto.replace(" ", "_").lower() + random.choice([".jpg", ".png", ".jpeg"])
        data_recolha = "19" + str(random.randint(70, 99)) + "-" + str(random.randint(1, 12)).zfill(
            2) + "-" + str(random.randint(1, 28)).zfill(2)
        output_buffer_objetos += f"({i}, '{data_recolha}' ,'{objeto}', {random.randint(0, count_armazens -1)}, {random.randint(0, count_casos - 1)})" + (
            ",\n" if i < count_objetos - 1 else ";")
        output_buffer_fotos += f"({i}, '{objeto_foto}', {i})" + (",\n" if i < count_objetos - 1 else ";")

        output_buffer = output_buffer_objetos + "\n" + output_buffer_fotos
    return output_buffer
